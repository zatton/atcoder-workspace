#!/usr/bin/env python3
import sys

MOD = 998244353  # type: int


def solve(N: int, D: "List[int]"):
    if D[0] != 0:
        print(0)
        return
    li = {}
    md = max(D)
    for d in D:
        if d in li:
            li[d] += 1
        else:
            li[d] = 1
    if li[0] != 1:
        print(0)
        return
    ans = 1
    for i in range(1, md + 1):
        if not i in li:
            print(0)
            return
        ans *= ((li[i - 1] ** li[i]) % MOD)
        ans %= MOD
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    D = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, D)

if __name__ == '__main__':
    main()
