#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

//イテレーション
#define REP(i, n) for (ll i = 0; i < ll(n); i++)
#define REPD(i, n) for (ll i = n - 1; i >= 0; i--)
#define FOR(i, a, b) for (ll i = a; i <= ll(b); i++)
#define FORD(i, a, b) for (ll i = a; i >= ll(b); i--)
#define FORA(i, I) for (const auto &i : I)
// x:コンテナ
#define ALL(x) x.begin(), x.end()
#define SIZE(x) ll(x.size())
//定数
#define INF32 2147483647          // 2.147483647×10^{9}:32bit整数のinf
#define INF64 9223372036854775807 // 9.223372036854775807×10^{18}:64bit整数のinf
//#define MOD 1000000007 //問題による
//略記
#define F first
#define S second
//出力(空白区切りで昇順に)
#define coutALL(x)                                                             \
  {                                                                            \
    for (auto i = x.begin(); i != --x.end(); i++)                              \
      cout << *i << " ";                                                       \
    cout << *--x.end() << endl;                                                \
  }

{ % if mod % }
const long long MOD = None;
{ % endif % } { % if yes_str % }
const string YES = "None";
{ % endif % } { % if no_str % }
const string NO = "None";
{ % endif % }

{
  % if prediction_success %
}
void solve(long long N, std::vector<long long> X, std::vector<long long> R){

} {
  % endif %
}

signed main() {
  //小数の桁数の出力指定
  // cout<<fixed<<setprecision(10);
  //入力の高速化用のコード
  // ios::sync_with_stdio(false); // stringの時はコメントアウト
  // cin.tie(nullptr);

  { % if prediction_success % }
  {
    { input_part }
  }
  solve(N, std::move(X), std::move(R));
  { % else % } // Failed to predict input format
  {
    % endif %
  }
  return 0;
}
