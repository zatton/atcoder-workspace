#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(A: "List[List[int]]", N: int, b: "List[int]"):
    cond = [[False for _ in range(3)] for _ in range(3)]
    for i in range(3):
        for j in range(3):
            for k in range(N):
                if b[k] == A[i][j]:
                    cond[i][j] = True
                    break

    for i in range(3):
        # 横
        if cond[i][0] and cond[i][1] and cond[i][2]:
            print(YES)
            return
        # 縦
        if cond[0][i] and cond [1][i] and cond[2][i]:
            print(YES)
            return
    # 斜め
    if cond[0][0] and cond[1][1] and cond[2][2]:
        print(YES)
        return
    if cond[0][2] and cond[1][1] and cond[2][0]:
        print(YES)
        return
    print(NO)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = [[int(next(tokens)) for _ in range(3)] for _ in range(3)]  # type: "List[List[int]]"
    N = int(next(tokens))  # type: int
    b = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(A, N, b)

if __name__ == '__main__':
    main()
