#!/usr/bin/env python3
import sys
import bisect

def solve(n: int, a: "List[int]"):
    a.sort()
    #print(a)
    ia = a[-1]
    bidx = bisect.bisect_left(a, ia / 2)
    if bidx == n - 1:
        ib = a[n - 2]
    elif bidx != 0:
        if (a[bidx] - ia / 2) < (ia / 2 - a[bidx - 1]):
            ib = a[bidx]
        else:
            ib = a[bidx - 1]
    else:
        ib = a[bidx]
    print(ia, ib)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    n = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(n)]  # type: "List[int]"
    solve(n, a)

if __name__ == '__main__':
    main()
