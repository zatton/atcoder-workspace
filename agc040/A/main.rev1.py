#!/usr/bin/env python3
import sys


def solve(S: str):
    last_bigger = -1 # このidxの数は増やせる
    cur = 0
    ans = 0
    for idx, s in enumerate(S):
        if s == '<':
            if (idx > 0 and S[idx - 1] == '>'):
                ans -= ((idx - last_bigger - 1) * cur)
                cur = 0
            cur = cur + 1
            ans += cur
            last_bigger = idx
        else:
            if cur > 0:
                cur = cur - 1
                ans += cur
            elif cur == 0:
                # cur = 0で変わらない
                ans += idx - last_bigger
    if S[-1] == '>':
        ans -= ((len(S) - last_bigger - 1) * cur)
        cur = 0
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
