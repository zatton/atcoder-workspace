#!/usr/bin/env python3
import sys


def solve(N: int, K: int, A: "List[int]"):
    li = {}
    for a in A:
        if a in li:
            li[a] += 1
        else:
            li[a] = 1
    liso = list(li.items())
    liso.sort(key=lambda i:i[1]) # list sorted
    toch = len(liso) - K # num list to change
    ans = 0
    for i in range(toch): # even ok if toch < 0
        ans += liso[i][1]
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, A)

if __name__ == '__main__':
    main()
