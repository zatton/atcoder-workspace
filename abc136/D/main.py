#!/usr/bin/env python3
import sys
import math

def solve(S: str):
    ans = [0] * len(S)
    skip = False
    r_st = None
    l_st = None
    for i in range(len(S) - 1):
        #print(ans)
        if skip:
            skip = False
            continue

        if S[i] == 'R' and r_st == None:
            r_st = i

        if S[i] == 'R' and l_st is not None:
            # l_stに足す
            ans[l_st] += math.floor((i - l_st - 1) / 2)
            ans[l_st - 1] += math.ceil((i - l_st - 1) / 2)
            l_st = None

        if S[i] == 'R' and S[i + 1] == 'L':
            #print('RL')
            ans[i] += 1
            ans[i + 1] += 1
            #print(ans)

            # r_stからの分を足す
            ans[i] += math.floor((i - r_st) / 2)
            ans[i + 1] += math.ceil((i - r_st) / 2)

            skip = True
            r_st = None
            l_st = i + 1
            continue
    # 最後
    if not skip:
        #print(l_st)
        ans[l_st] += math.floor((len(S) - 1 - l_st) / 2)
        ans[l_st - 1] += math.ceil((len(S) - 1 - l_st) / 2)

    print(" ".join(map(str, ans)))
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
