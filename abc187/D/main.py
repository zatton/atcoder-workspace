#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]", B: "List[int]"):
    total = -1 * sum(A) # プラスならOK
    if total > 0:
        print(0)
        return
    ben = [0] * N
    for i in range(N):
        ben[i] = B[i] + 2 * A[i]
    ben.sort(reverse=True)
    #print(total)
    #print(ben)
    ans = 0
    for b in ben:
        total += b
        ans += 1
        if total > 0:
            print(ans)
            return
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int()] * (N)  # type: "List[int]"
    B = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        A[i] = int(next(tokens))
        B[i] = int(next(tokens))
    solve(N, A, B)

if __name__ == '__main__':
    main()
