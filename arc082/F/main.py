#!/usr/bin/env python3
import sys


def solve(X: int, K: int, r: "List[int]", Q: int, t: "List[int]", a: "List[int]"):
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    r = [int(next(tokens)) for _ in range(K)]  # type: "List[int]"
    Q = int(next(tokens))  # type: int
    t = [int()] * (Q)  # type: "List[int]"
    a = [int()] * (Q)  # type: "List[int]"
    for i in range(Q):
        t[i] = int(next(tokens))
        a[i] = int(next(tokens))
    solve(X, K, r, Q, t, a)

if __name__ == '__main__':
    main()
