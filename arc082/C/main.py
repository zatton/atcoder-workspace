#!/usr/bin/env python3
import sys


def solve(N: int, a: "List[int]"):
    ans = 0
    sel = {}
    tmp = 0
    for x in a:
        if x in sel:
            sel[x] += 1
        else:
            sel[x] = 1
    ans = 0
    #print(sel)
    for i in sel.keys():
        tmp = sel[i]
        if (i + 1) in sel:
            tmp += sel[i + 1]
        if (i - 1) in sel:
            tmp += sel[i - 1]
        if tmp > ans:
            ans = tmp
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, a)

if __name__ == '__main__':
    main()
