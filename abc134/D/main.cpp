#include <bits/stdc++.h>
using namespace std;
using ll = long long;

const long long MOD = 2;

void solve(long long N, std::vector<long long> a){
  vector<long long> ans_p;
  int ans[N + 1];
  for (ll i = N; i >= 0; i--) {
    ans[i] = 0;
  }
  //cout << "OK1" << endl;
  for (ll i = N; i >= 1; i--) {
    //cout << i << endl;
    ll tmp = 0;
    for (ll j = i; j <= N; j += i) {
      tmp += ans[j];
    }
    if (tmp % 2 != a[i - 1]) {
      ans_p.push_back(i);
      ans[i] = 1;
    }
  }
  //cout << "OK2" << endl;
  cout << ans_p.size() << endl;
  if (ans_p.size() > 0) {
    cout << ans_p[0];
    for (ll i = 1; i < ans_p.size(); i++) {
      cout << ' ' << ans_p[i];
    }
    cout << endl;
  }
}

// Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    scanf("%lld",&N);
    std::vector<long long> a(N);
    for(ll i = 0 ; i < N ; i++){
        scanf("%lld",&a[i]);
    }
    solve(N, std::move(a));
    return 0;
}
