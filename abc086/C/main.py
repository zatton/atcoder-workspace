#!/usr/bin/env python3
import sys

YES = "Yes"  # type: str
NO = "No"  # type: str


def solve(N: int, T: "List[int]", X: "List[int]", Y: "List[int]"):
    last = [0, 0]
    last_t = 0
    for t, x, y in zip(T, X, Y):
        dis = abs(x - last[0]) + abs(y - last[1])
        span = t - last_t
        if not (span >= dis and (span - dis) % 2 == 0):
            print(NO)
            return
        last_t = t
        last = [x, y]
    print(YES)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    t = [int()] * (N)  # type: "List[int]"
    x = [int()] * (N)  # type: "List[int]"
    y = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        t[i] = int(next(tokens))
        x[i] = int(next(tokens))
        y[i] = int(next(tokens))
    solve(N, t, x, y)

if __name__ == '__main__':
    main()
