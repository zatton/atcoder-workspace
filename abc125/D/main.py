#!/usr/bin/env python3
import sys
import math

def solve(N: int, A: "List[int]"):
    numminus = sum(1 for a in A if a < 0)
    absA = list(map(abs, A))
    ans = sum(absA)
    #print(absA, numminus, min(absA), ans)
    if numminus % 2 != 0:
        ans -= (min(absA) * 2)
    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
