#!/usr/bin/env python3
import sys


def solve(N: int, a: "List[int]"):
    used = {1: True}
    cur = 1
    step = 0
    while True:
        step += 1
        cur = a[cur - 1]

        if cur == 2:
            print(step)
            return
        elif cur in used:
            print(-1)
            return

        used[cur] = True
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    #def iterate_tokens():
    #    for line in sys.stdin:
    #        for word in line.split():
    #            yield word
    #tokens = iterate_tokens()
    #N = int(next(tokens))  # type: int
    #a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    N = int(input())
    a = [ int(input()) for _ in range(N) ]
    solve(N, a)

if __name__ == '__main__':
    main()
